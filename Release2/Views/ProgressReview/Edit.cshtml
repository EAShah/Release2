@model Release2.ViewModels.ProgressReviewViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit Progress Review</h4>

    <div class="form-group">
        @Html.LabelFor(model => model.ProbationaryColleague, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PCId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProbationaryColleague, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Level, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.EvalDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EvalDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EvalDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <table class="table">
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Competencies)
            </th>
            <th>
                Score
            </th>

            <th></th>
        </tr>@*remove count?*@
        @for (int i = 0; i < Model.Competencies.Count(); i++)
        {
            <tr>
                <td>
                    @Html.HiddenFor(m => m.Competencies[i].Id)
                    @Html.DisplayFor(m => m.Competencies[i].CompetencyName)
                </td>
                <td>
                    @Html.EditorFor(m => m.Competencies[i].Score, new { htmlAttributes = new { @class = "form-control", placeholder = "Score" } })
                </td>
                @Html.ValidationMessageFor(m => m.Competencies[i].Score)
            </tr>
        }

    </table>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-success pull-left"> <span class="glyphicon glyphicon-floppy-saved" type="submit"></span> Edit Assignment</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to all Progress Reviews", "Index", null, new { @class = "btn btn-sm btn-primary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
