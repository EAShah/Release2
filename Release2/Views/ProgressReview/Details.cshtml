@model Release2.ViewModels.ProgressReviewViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Progress Review Details</h2>

<div class="form-horizontal">
    <h4>You are Approving a Progress Review. </h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.PCId)
    @Html.HiddenFor(model => model.LMId)

    <fieldset class="fieldset-border">
        <legend class="legend-border">Progress Report and Scores</legend>

        <div class="form-group">
            @Html.LabelFor(model => model.EvalDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EvalDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EvalDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <table class="table table-bordered">
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Competencies)
                </th>
                <th>
                    Score
                </th>

                <th></th>
            </tr>
            @foreach (var i in Model.Competencies)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(modelItem => i.Id)
                        @Html.DisplayFor(modelItem => i.CompetencyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => i.Score)
                    </td>
                </tr>
            }

        </table>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.TotalScore, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.TotalScore, "", new { @class = "text-danger" })
            </div>
        </div>

    </fieldset>
    <fieldset class="fieldset-border">
        <legend class="legend-border">Self Assessments</legend>
        <div class="form-group">
            @Html.LabelFor(model => model.PREvalDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PREvalDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PREvalDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelfEvaluation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SelfEvaluation, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.SelfEvaluation, "", new { @class = "text-danger" })
            </div>
        </div>

    </fieldset>

        
        <p>
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </p>
